(()=>{"use strict";var n={303:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"div#formBackdrop {\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    background-color: rgba(0, 0, 0, 0.4);\n}\n\ndiv#newProjectContainer,\ndiv#newTaskContainer {\n    position: absolute;\n    background-color: rgb(255, 255, 255);\n    width: 400px;\n    transform: translate(-50%, -50%);\n    left: 50%;\n    top: 50%;\n    border-radius: 10px;\n    box-shadow: 0 10px 10px 2px #00000030;\n}\n\ndiv#newProjectContainer {\n    height: 350px;\n}\n\ndiv#newTaskContainer {\n    height: 575px;\n}\n\n#newTaskContainer {\n    height: 575px;\n}\n\n.formHeader {\n    height: 10%;\n    display: flex;\n    padding: 15px;\n    justify-content: space-between;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    color: white;\n    font-weight: bold;\n}\n\n.new {\n background-color: #25cd7b\n}\n\n.del {\n background-color: #d9263f\n}\n\np.formTitle {\n    align-self: center;\n    font-size: 26px;\n}\n\np.formClose {\n    font-size: 20px;\n    align-self: center;\n    cursor: pointer;\n}\n\ndiv#projectData,\ndiv#taskData {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 90%;\n    padding: 20px;\n}\n\n.nameContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.label {\n    margin-left: 10px;\n    font-size: 17px;\n}\n\ninput.text,\ntextarea,\nselect,\n[type=date] {\n    width: 100%;\n    margin: 5px 0 20px 0;\n    padding: 10px;\n    background-color: white;\n    color: #757575;\n    font-size: 15px;\n    border: 1px solid #E6E6E6;\n    border-radius: 3px;\n    transition: .3s;\n}\n\ninput.text:focus-visible,\ntextarea:focus-visible,\nselect:focus-visible,\n[type=date]:focus-visible {\n    outline-color: #25cd7b;\n}\n\n#projectPictures img {\n    height: 40px;\n    padding: 5px;\n    cursor: pointer;\n    transition: 0.3s;\n    margin: 0 13px;\n}\n\n[type=radio] {\n    position: absolute;\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n[type=radio]:checked + img {\n    border: 1px solid #25cd7b;\n    border-radius: 2px;\n    padding: 10px;\n}\n\np.label {\n    margin: 0 0 5px 12px;\n}\n\n.buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 8px;\n    margin-top: 10px;\n    border-top: 1px solid #E6E6E6;\n    padding: 20px 0 0 0;\n}\n\nbutton {\n    padding: 10px 17px;\n    cursor: pointer;\n    border-radius: 3px;\n    color: gray;\n    font-size: 15px;\n    transition: .3s;\n}\n\nbutton.cancel {\n    background-color: white;\n    border: 1px solid #E6E6E6;\n}\n\nbutton.cancel:hover {\n    border: 1px solid #25cd7b;\n    color: #25cd7b;\n}\n\nbutton.confirm {\n    background-color: #25cd7b;\n    color: white;\n    border: transparent;\n}\n\nbutton.confirm:hover {\n    background-color: #21b36c;\n}","",{version:3,sources:["webpack://./src/projectForm.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,YAAY;IACZ,WAAW;IACX,oCAAoC;AACxC;;AAEA;;IAEI,kBAAkB;IAClB,oCAAoC;IACpC,YAAY;IACZ,gCAAgC;IAChC,SAAS;IACT,QAAQ;IACR,mBAAmB;IACnB,qCAAqC;AACzC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,aAAa;IACb,8BAA8B;IAC9B,4BAA4B;IAC5B,6BAA6B;IAC7B,YAAY;IACZ,iBAAiB;AACrB;;AAEA;CACC;AACD;;AAEA;CACC;AACD;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,eAAe;AACnB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB;;AAEA;;;;IAII,WAAW;IACX,oBAAoB;IACpB,aAAa;IACb,uBAAuB;IACvB,cAAc;IACd,eAAe;IACf,yBAAyB;IACzB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;;;;IAII,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,gBAAgB;IAChB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,QAAQ;IACR,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,QAAQ;IACR,gBAAgB;IAChB,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,kBAAkB;IAClB,WAAW;IACX,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["div#formBackdrop {\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    background-color: rgba(0, 0, 0, 0.4);\n}\n\ndiv#newProjectContainer,\ndiv#newTaskContainer {\n    position: absolute;\n    background-color: rgb(255, 255, 255);\n    width: 400px;\n    transform: translate(-50%, -50%);\n    left: 50%;\n    top: 50%;\n    border-radius: 10px;\n    box-shadow: 0 10px 10px 2px #00000030;\n}\n\ndiv#newProjectContainer {\n    height: 350px;\n}\n\ndiv#newTaskContainer {\n    height: 575px;\n}\n\n#newTaskContainer {\n    height: 575px;\n}\n\n.formHeader {\n    height: 10%;\n    display: flex;\n    padding: 15px;\n    justify-content: space-between;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    color: white;\n    font-weight: bold;\n}\n\n.new {\n background-color: #25cd7b\n}\n\n.del {\n background-color: #d9263f\n}\n\np.formTitle {\n    align-self: center;\n    font-size: 26px;\n}\n\np.formClose {\n    font-size: 20px;\n    align-self: center;\n    cursor: pointer;\n}\n\ndiv#projectData,\ndiv#taskData {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 90%;\n    padding: 20px;\n}\n\n.nameContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.label {\n    margin-left: 10px;\n    font-size: 17px;\n}\n\ninput.text,\ntextarea,\nselect,\n[type=date] {\n    width: 100%;\n    margin: 5px 0 20px 0;\n    padding: 10px;\n    background-color: white;\n    color: #757575;\n    font-size: 15px;\n    border: 1px solid #E6E6E6;\n    border-radius: 3px;\n    transition: .3s;\n}\n\ninput.text:focus-visible,\ntextarea:focus-visible,\nselect:focus-visible,\n[type=date]:focus-visible {\n    outline-color: #25cd7b;\n}\n\n#projectPictures img {\n    height: 40px;\n    padding: 5px;\n    cursor: pointer;\n    transition: 0.3s;\n    margin: 0 13px;\n}\n\n[type=radio] {\n    position: absolute;\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n[type=radio]:checked + img {\n    border: 1px solid #25cd7b;\n    border-radius: 2px;\n    padding: 10px;\n}\n\np.label {\n    margin: 0 0 5px 12px;\n}\n\n.buttons {\n    display: flex;\n    justify-content: flex-end;\n    gap: 8px;\n    margin-top: 10px;\n    border-top: 1px solid #E6E6E6;\n    padding: 20px 0 0 0;\n}\n\nbutton {\n    padding: 10px 17px;\n    cursor: pointer;\n    border-radius: 3px;\n    color: gray;\n    font-size: 15px;\n    transition: .3s;\n}\n\nbutton.cancel {\n    background-color: white;\n    border: 1px solid #E6E6E6;\n}\n\nbutton.cancel:hover {\n    border: 1px solid #25cd7b;\n    color: #25cd7b;\n}\n\nbutton.confirm {\n    background-color: #25cd7b;\n    color: white;\n    border: transparent;\n}\n\nbutton.confirm:hover {\n    background-color: #21b36c;\n}"],sourceRoot:""}]);const c=a},426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\n#header {\n    display: flex;\n    align-items: center;\n    height: 10vh;\n    background-color: #25cd7b;\n}\n\n#header h1 {\n    color: whitesmoke;\n    padding: 8px;\n    letter-spacing: 5px;\n    margin: 0 0 0 2%;\n\n}\n\n#main {\n    display: flex;\n    justify-content: stretch;\n    height: 80vh;\n}\n\n#sidebar {\n    color: #757575;\n    width: 230px;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    align-items: center;\n    border-right: 1px solid rgba(197, 190, 190, 0.616)\n}\n\n.project,\n.userProject {\n    width: 160px;\n    display: flex;\n    justify-content: space-between;\n    padding: 8px;\n    gap: 4px;\n    cursor: pointer;\n    background-color: #efefef\n}\n\n.project:hover,\n.userProject:hover {\n    border: 1px solid #757575;\n    border-radius: 2px;\n}\n\n.project img,\n.userProject img {\n    height: 20px;\n    width: 20px;\n    filter: brightness(0);\n}\n\n\n.project.active,\n.userProject.active {\n    background-color: #25cd7b;\n    color: rgb(0, 0, 0);\n    border-radius: 8px;\n    font-weight:bolder;\n}\n\n.fixed,\n#userProj {\n    display: flex;\n    justify-content: space-between;\n    width: 170px;\n    align-self: flex-start;\n    margin: 20px 0 0 0;\n    border-bottom: 1px solid gray;\n    padding: 0 10px 8px;\n    font-size: 18px;\n}\n\ndiv#userProjList {\n    gap: 3px;\n    display: flex;\n    flex-direction: column;\n}\n\ndiv#newProj, \ndiv#newTask {\n    font-size: 15px;\n    font-weight: bold;\n    border-radius: 15px;\n    border: #8d8989 1px solid;\n    color: #757575;\n    width: 20px;\n    height: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    transition: 0.3s;\n}\n\ndiv#newProj:hover,\ndiv#newTask:hover {\n    border: 1px solid #25cd7b;\n    color: #25cd7b;\n}\n\n#list {\n    width: -webkit-fill-available;\n    display: flex;\n    flex-direction: column;\n    gap: 10%;\n}\n\n#taskHeader {\n    align-self: center;\n    margin-top: 5%;\n    font-size: xx-large;\n}\n\n#taskCounter {\n    margin: 0 5% 2% 5%;\n    border-bottom: 1px solid #757575;\n    padding: 0 10px 5px;\n    display: flex;\n    justify-content: space-between;\n}\n\n\n.taskEntry {\n    height: 35px;\n    width: -webkit-fill-available;\n    margin: 0 5% 2% 5%;\n    border-radius: 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.taskEntry.low {\n    background-color: #e8f5e9;\n}\n\n.taskEntry.medium {\n    background-color: #fff3e0;\n}\n\n.taskEntry.high {\n    background-color: #ffebee\n}\n\n.taskEntry.completed {\n    background-color: #efefef;\n}\n\n.completed p {\n    text-decoration: line-through;\n}\n\n.taskPriority {\n    display: flex;\n    gap: 8px;\n    padding: 5px;\n}\n\n.taskEntry img {\n    width: 18px;\n    height: 18px;\n}\n\n.taskEntry .statusBar {\n    padding: 5px 5px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#footer {\n    height: 10vh;\n    border-top: 1px solid rgba(197, 190, 190, 0.616)\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,mBAAmB;IACnB,gBAAgB;;AAEpB;;AAEA;IACI,aAAa;IACb,wBAAwB;IACxB,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,mBAAmB;IACnB;AACJ;;AAEA;;IAEI,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,QAAQ;IACR,eAAe;IACf;AACJ;;AAEA;;IAEI,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;IACZ,WAAW;IACX,qBAAqB;AACzB;;;AAGA;;IAEI,yBAAyB;IACzB,mBAAmB;IACnB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;;IAEI,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;IAClB,6BAA6B;IAC7B,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,QAAQ;IACR,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;IAEI,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,yBAAyB;IACzB,cAAc;IACd,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,gBAAgB;AACpB;;AAEA;;IAEI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,6BAA6B;IAC7B,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,gCAAgC;IAChC,mBAAmB;IACnB,aAAa;IACb,8BAA8B;AAClC;;;AAGA;IACI,YAAY;IACZ,6BAA6B;IAC7B,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI;AACJ;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ;AACJ",sourcesContent:["* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\n#header {\n    display: flex;\n    align-items: center;\n    height: 10vh;\n    background-color: #25cd7b;\n}\n\n#header h1 {\n    color: whitesmoke;\n    padding: 8px;\n    letter-spacing: 5px;\n    margin: 0 0 0 2%;\n\n}\n\n#main {\n    display: flex;\n    justify-content: stretch;\n    height: 80vh;\n}\n\n#sidebar {\n    color: #757575;\n    width: 230px;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    align-items: center;\n    border-right: 1px solid rgba(197, 190, 190, 0.616)\n}\n\n.project,\n.userProject {\n    width: 160px;\n    display: flex;\n    justify-content: space-between;\n    padding: 8px;\n    gap: 4px;\n    cursor: pointer;\n    background-color: #efefef\n}\n\n.project:hover,\n.userProject:hover {\n    border: 1px solid #757575;\n    border-radius: 2px;\n}\n\n.project img,\n.userProject img {\n    height: 20px;\n    width: 20px;\n    filter: brightness(0);\n}\n\n\n.project.active,\n.userProject.active {\n    background-color: #25cd7b;\n    color: rgb(0, 0, 0);\n    border-radius: 8px;\n    font-weight:bolder;\n}\n\n.fixed,\n#userProj {\n    display: flex;\n    justify-content: space-between;\n    width: 170px;\n    align-self: flex-start;\n    margin: 20px 0 0 0;\n    border-bottom: 1px solid gray;\n    padding: 0 10px 8px;\n    font-size: 18px;\n}\n\ndiv#userProjList {\n    gap: 3px;\n    display: flex;\n    flex-direction: column;\n}\n\ndiv#newProj, \ndiv#newTask {\n    font-size: 15px;\n    font-weight: bold;\n    border-radius: 15px;\n    border: #8d8989 1px solid;\n    color: #757575;\n    width: 20px;\n    height: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    transition: 0.3s;\n}\n\ndiv#newProj:hover,\ndiv#newTask:hover {\n    border: 1px solid #25cd7b;\n    color: #25cd7b;\n}\n\n#list {\n    width: -webkit-fill-available;\n    display: flex;\n    flex-direction: column;\n    gap: 10%;\n}\n\n#taskHeader {\n    align-self: center;\n    margin-top: 5%;\n    font-size: xx-large;\n}\n\n#taskCounter {\n    margin: 0 5% 2% 5%;\n    border-bottom: 1px solid #757575;\n    padding: 0 10px 5px;\n    display: flex;\n    justify-content: space-between;\n}\n\n\n.taskEntry {\n    height: 35px;\n    width: -webkit-fill-available;\n    margin: 0 5% 2% 5%;\n    border-radius: 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.taskEntry.low {\n    background-color: #e8f5e9;\n}\n\n.taskEntry.medium {\n    background-color: #fff3e0;\n}\n\n.taskEntry.high {\n    background-color: #ffebee\n}\n\n.taskEntry.completed {\n    background-color: #efefef;\n}\n\n.completed p {\n    text-decoration: line-through;\n}\n\n.taskPriority {\n    display: flex;\n    gap: 8px;\n    padding: 5px;\n}\n\n.taskEntry img {\n    width: 18px;\n    height: 18px;\n}\n\n.taskEntry .statusBar {\n    padding: 5px 5px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n#footer {\n    height: 10vh;\n    border-top: 1px solid rgba(197, 190, 190, 0.616)\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],A=o.base?s[0]+o.base:s[0],d=i[A]||0,l="".concat(A," ").concat(d);i[A]=d+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:C,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var s=o(n,r),A=0;A<i.length;A++){var d=t(i[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},819:(n,e,t)=>{n.exports=t.p+"c1f845e38d90de82abfd.svg"},809:(n,e,t)=>{n.exports=t.p+"95afb7ba4022027112ee.svg"},172:(n,e,t)=>{n.exports=t.p+"17a689bc15ce69f406ac.svg"},666:(n,e,t)=>{n.exports=t.p+"c1b4dfa12a9ee39d5956.svg"},280:(n,e,t)=>{n.exports=t.p+"37a9a3b6296eabef7651.svg"},465:(n,e,t)=>{n.exports=t.p+"3fea4781dff02433b86a.svg"},718:(n,e,t)=>{n.exports=t.p+"d7e4956fb3f8821076e6.svg"},518:(n,e,t)=>{n.exports=t.p+"48f4d17b808fe58b819d.svg"},311:(n,e,t)=>{n.exports=t.p+"101812657ca59b7cb1ec.svg"},739:(n,e,t)=>{n.exports=t.p+"97110ace6f80b8931dd3.svg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})();var o={};(()=>{t.d(o,{Z:()=>L});var n=t(379),e=t.n(n),r=t(795),i=t.n(r),a=t(569),c=t.n(a),s=t(565),A=t.n(s),d=t(216),l=t.n(d),p=t(589),u=t.n(p),C=t(426),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=c().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=l(),e()(C.Z,m),C.Z&&C.Z.locals&&C.Z.locals;var f=t(303),b={};b.styleTagTransform=u(),b.setAttributes=A(),b.insert=c().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=l(),e()(f.Z,b),f.Z&&f.Z.locals&&f.Z.locals;var x=t(739),h=t(718),g=t(518),B=t(280),I=t(819);const v=function(){function n(n){P.deleteGeneratedDivs(".taskEntry");let e=n.tasks.length;for(let t=0;t<e;t++){const e=n.tasks[t];e.position=t,console.log(e),P.createTaskDiv(e,n)}}return{insertProject:function(){const n=P.getProjectData();let e=L.createProject(n[0],n[1]);L.addProject(e)},displayProjects:function(){P.deleteGeneratedDivs(".userProject");let n=L.returnArrayLength();for(let e=0;e<n;e++){const n=L.returnProject(e);n.position=e,P.createProjectDiv(n)}},insertTask:function(n){const e=P.getTaskData();let t=L.createTask(e[0],e[1],e[2],e[3]);L.addTask(n.position,t);const o=document.querySelector("#taskCounter p");let r=Number(o.textContent.split(" ")[0])+1;o.textContent=r},deleteTask:function(e,t){L.removeTask(t.position,e.position),n(t);const o=document.querySelector("#taskCounter p");let r=Number(o.textContent.split(" ")[0])-1;o.textContent=r},generateTaskList:n,changeCompletedStatus:function(n,e){switch(!0){case!0===n.completed:n.completed=!1,e.classList.remove("completed");break;case!1===n.completed:n.completed=!0,e.classList.add("completed")}}}}();var y=t(172),k=t(311),E=t(809),w=t(465),j=t(666);const P=function(){function n(n){const t=document.createElement("div");t.setAttribute("id","formBackdrop");const o=document.createElement("div");o.setAttribute("id","newProjectContainer");const r=document.createElement("div");r.setAttribute("class","formHeader new");const i=document.createElement("p");i.textContent="CREATE PROJECT",i.setAttribute("class","formTitle");const a=document.createElement("p");a.textContent="X",a.setAttribute("class","formClose"),a.addEventListener("click",(function(){e(t)})),r.appendChild(i),r.appendChild(a),o.appendChild(r);const c=document.createElement("div");c.setAttribute("id","projectData");const s=document.createElement("div");s.classList.add("nameContainer");const A=document.createElement("label");A.setAttribute("for","projName"),A.setAttribute("class","label"),A.textContent="Project Name:";const d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("id","projName"),d.setAttribute("class","text"),s.appendChild(A),s.appendChild(d),c.appendChild(s);const l=document.createElement("div");l.classList.add("picturesContainer");const p=document.createElement("div");p.setAttribute("id","projectPictures");const u=document.createElement("p");u.classList.add("label"),u.textContent="Icons:";for(let n=0;n<5;n++){const e=document.createElement("label"),t=document.createElement("input");t.setAttribute("type","radio"),t.setAttribute("name","icon"),t.setAttribute("value",`${n}`),e.appendChild(t);const o=document.createElement("img"),r=L.extractIcon(n);o.src=r,e.appendChild(o),p.appendChild(e)}l.appendChild(u),l.appendChild(p),c.appendChild(l);const C=document.createElement("div");C.classList.add("buttons");const m=document.createElement("button");m.classList.add("cancel"),m.textContent="Cancel",C.appendChild(m),m.addEventListener("click",(function(){e(t)}));const f=document.createElement("button");f.classList.add("confirm"),f.textContent="Confirm",C.appendChild(f),f.addEventListener("click",(function(){v.insertProject(),v.displayProjects(),e(t)})),c.appendChild(C),o.appendChild(c),t.appendChild(o),document.querySelector("body").insertBefore(t,document.querySelector("#header"))}function e(n){n.remove()}function t(n){document.querySelector("#list").remove();const t=document.createElement("div");t.setAttribute("id","list");const o=document.createElement("div");o.setAttribute("id","taskHeader");const r=document.createElement("img");r.src=n.icon,r.style="height: 20px; margin-right: 8px;",o.appendChild(r);const i=document.createElement("span");i.textContent=n.name,o.appendChild(i),t.appendChild(o);const a=document.createElement("div");a.setAttribute("id","taskContainer");const c=document.createElement("div");c.setAttribute("id","taskCounter");const s=document.createElement("p");s.textContent=`${n.tasks.length} Tasks`,c.appendChild(s);const A=document.createElement("div");A.setAttribute("id","newTask"),A.textContent="+",A.addEventListener("click",(function(){!function(n){const t=document.createElement("div");t.setAttribute("id","formBackdrop");const o=document.createElement("div");o.setAttribute("id","newTaskContainer");const r=document.createElement("div");r.setAttribute("class","formHeader new");const i=document.createElement("p");i.textContent="CREATE TASK",i.setAttribute("class","formTitle");const a=document.createElement("p");a.textContent="X",a.setAttribute("class","formClose"),a.addEventListener("click",(function(){e(t)})),r.appendChild(i),r.appendChild(a),o.appendChild(r);const c=document.createElement("div");c.setAttribute("id","projectData");const s=document.createElement("div");s.classList.add("nameContainer");const A=document.createElement("label");A.setAttribute("for","taskName"),A.setAttribute("class","label"),A.textContent="Task name:";const d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("id","taskName"),d.setAttribute("class","text"),s.appendChild(A),s.appendChild(d),c.appendChild(s);const l=document.createElement("div");l.classList.add("descriptionContainer");const p=document.createElement("label");p.setAttribute("for","taskDescr"),p.setAttribute("class","label"),p.textContent="Task description:";const u=document.createElement("textarea");u.setAttribute("rows","3"),u.setAttribute("col","60"),u.setAttribute("name","taskDescr"),u.setAttribute("id","taskDescr"),l.appendChild(p),l.appendChild(u),c.appendChild(l);const C=document.createElement("div");C.classList.add("dateContainer");const m=document.createElement("label");m.setAttribute("for","taskDate"),m.setAttribute("class","label"),m.textContent="Due date:";const f=document.createElement("input");f.setAttribute("type","date"),f.setAttribute("name","taskDate"),f.setAttribute("value","2022-05-12"),f.setAttribute("id","taskDate"),C.appendChild(m),C.appendChild(f),c.appendChild(C);const b=document.createElement("div");b.classList.add("dateContainer");const x=document.createElement("label");x.setAttribute("for","taskPriority"),x.setAttribute("class","label"),x.textContent="Task priority:";const h=document.createElement("select");h.setAttribute("id","taskPriority"),h.setAttribute("name","taskPriority");const g=["Low","Medium","High"];for(let n=0;n<g.length;n++){const e=document.createElement("option");e.setAttribute("value",`${g[n].toLowerCase()}`),e.textContent=g[n],h.appendChild(e)}b.appendChild(x),b.appendChild(h),c.appendChild(b);const B=document.createElement("div");B.classList.add("buttons");const I=document.createElement("button");I.classList.add("cancel"),I.textContent="Cancel",B.appendChild(I),I.addEventListener("click",(function(){e(t)}));const y=document.createElement("button");y.classList.add("confirm"),y.textContent="Confirm",B.appendChild(y),y.addEventListener("click",(function(){v.insertTask(n),v.generateTaskList(n),e(t)})),c.appendChild(B),o.appendChild(c),t.appendChild(o),document.querySelector("body").insertBefore(t,document.querySelector("#header"))}(n)})),c.appendChild(A),a.appendChild(c);const d=document.createElement("div");d.setAttribute("id","taskList"),a.appendChild(d),t.appendChild(a),document.querySelector("#main").appendChild(t),v.generateTaskList(n)}function o(n){const e=document.querySelector(".active");if(null!==e)return e.classList.remove("active"),void n.classList.add("active");n.classList.add("active")}return document.querySelector("#newProj").addEventListener("click",n),{createProjectForm:n,getProjectData:function(){const n=document.querySelector("#formBackdrop");let e,t=n.querySelector("#projName").value;return n.querySelectorAll('input[name="icon"]').forEach((n=>{!0===n.checked&&(e=L.extractIcon(Number(n.value)))})),[t,e]},createProjectDiv:function(n){const e=document.createElement("div");e.classList.add("userProject");const r=document.createElement("img");r.src=n.icon,e.appendChild(r);const i=document.createElement("p");i.textContent=n.name,e.appendChild(i);const a=document.createElement("img");a.src=y,e.appendChild(a),a.addEventListener("click",(function(){L.deleteProject(n.position),v.displayProjects()})),i.addEventListener("click",(function(){o(e),t(n)})),r.addEventListener("click",(function(){o(e),t(n)})),document.querySelector("#userProjList").appendChild(e)},createTaskDiv:function(n,e){const t=document.createElement("div");switch(t.classList.add("taskEntry"),!0){case"low"===n.priority:t.classList.add("low");break;case"medium"===n.priority:t.classList.add("medium");break;case"high"===n.priority:t.classList.add("high")}!0===n.completed&&t.classList.add("completed");const o=document.createElement("div");o.classList.add("taskPriority"),t.appendChild(o);const r=document.createElement("img");r.src=!0===n.completed?E:k,r.addEventListener("click",(function(){v.changeCompletedStatus(n,t),r.src=!0===n.completed?E:k}));const i=document.createElement("p");i.textContent=n.name,o.appendChild(r),o.appendChild(i);const a=document.createElement("div");a.classList.add("statusBar");const c=document.createElement("img");c.src=w,c.addEventListener("click",(function(){})),a.appendChild(c);const s=document.createElement("img");s.src=j,s.addEventListener("click",(function(){})),a.appendChild(s);const A=document.createElement("img");A.src=y,A.addEventListener("click",(function(){v.deleteTask(n,e)})),a.appendChild(A),t.appendChild(o),t.appendChild(a),document.querySelector("#taskList").appendChild(t)},showProjectInterface:t,deleteGeneratedDivs:function(n){null!==document.querySelector(n)&&Array.from(document.querySelectorAll(n)).forEach((n=>n.remove()))},getTaskData:function(){const n=document.querySelector("#formBackdrop");return[n.querySelector("#taskName").value,n.querySelector("#taskDescr").value,n.querySelector("#taskDate").value,n.querySelector("#taskPriority").value]}}}(),L=function(){const n=[x,h,g,B,I],e=[];return{extractIcon:function(e){return n[e]},createProject:function(n,e){return{name:n,icon:e,tasks:[],position:0}},createTask:function(n,e,t,o){return{name:n,description:e,date:t,priority:o,completed:!1,position:0}},addProject:function(n){e.push(n)},addTask:function(n,t){e[n].tasks.push(t)},removeTask:function(n,t){e[n].tasks.splice(t,1)},returnArrayLength:function(){return e.length},returnProject:function(n){return e[n]},deleteProject:function(n){e.splice(n,1)}}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,